{"ast":null,"code":"var _jsxFileName = \"D:\\\\AGRIDUCT\\\\frontend\\\\src\\\\page\\\\orderstatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// ... (other imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst orderstatus = () => {\n  _s();\n  // ... (existing code)\n\n  const [orderIdToCheck, setOrderIdToCheck] = useState(\"\"); // State to hold the order ID for status checking\n  const [orderStatus, setOrderStatus] = useState(\"\"); // State to hold the order status\n\n  // Function to check order status\n  const checkOrderStatus = orderId => {\n    // Simulating status retrieval from an API or database\n    const orderStatuses = {\n      \"123456\": \"Processing\",\n      \"789012\": \"Shipped\",\n      \"345678\": \"Delivered\"\n      // Add more order IDs and statuses as needed\n    };\n\n    const status = orderStatuses[orderId];\n    if (status) {\n      setOrderStatus(`Order ID ${orderId} status: ${status}`);\n    } else {\n      setOrderStatus(`Order ID ${orderId} not found or status not available`);\n    }\n  };\n\n  // Function to handle checking order status\n  const handleCheckOrderStatus = () => {\n    if (orderIdToCheck.trim() === \"\") {\n      // Check if order ID is provided\n      toast.error(\"Please provide an order ID.\");\n      return;\n    }\n\n    // Call function to check order status\n    checkOrderStatus(orderIdToCheck);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"i\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Order ID\",\n        value: orderIdToCheck,\n        onChange: e => setOrderIdToCheck(e.target.value),\n        className: \"border p-2 m-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-yellow-500 text-white font-bold py-2 px-4\",\n        onClick: handleCheckOrderStatus,\n        children: \"Check Order Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), orderStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-200 text-yellow-800 p-3 m-3\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(orderstatus, \"Ji7gn7X+5TfQmII70y9imAGDqeY=\");\nexport default orderstatus;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","orderstatus","orderIdToCheck","setOrderIdToCheck","orderStatus","setOrderStatus","checkOrderStatus","orderId","orderStatuses","status","handleCheckOrderStatus","trim","toast","error","e","target","value"],"sources":["D:/AGRIDUCT/frontend/src/page/orderstatus.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// ... (other imports)\r\n\r\nconst orderstatus = () => {\r\n  // ... (existing code)\r\n\r\n  const [orderIdToCheck, setOrderIdToCheck] = useState(\"\"); // State to hold the order ID for status checking\r\n  const [orderStatus, setOrderStatus] = useState(\"\"); // State to hold the order status\r\n\r\n  // Function to check order status\r\n  const checkOrderStatus = (orderId) => {\r\n    // Simulating status retrieval from an API or database\r\n    const orderStatuses = {\r\n      \"123456\": \"Processing\",\r\n      \"789012\": \"Shipped\",\r\n      \"345678\": \"Delivered\",\r\n      // Add more order IDs and statuses as needed\r\n    };\r\n\r\n    const status = orderStatuses[orderId];\r\n\r\n    if (status) {\r\n      setOrderStatus(`Order ID ${orderId} status: ${status}`);\r\n    } else {\r\n      setOrderStatus(`Order ID ${orderId} not found or status not available`);\r\n    }\r\n  };\r\n\r\n  // Function to handle checking order status\r\n  const handleCheckOrderStatus = () => {\r\n    if (orderIdToCheck.trim() === \"\") {\r\n      // Check if order ID is provided\r\n      toast.error(\"Please provide an order ID.\");\r\n      return;\r\n    }\r\n\r\n    // Call function to check order status\r\n    checkOrderStatus(orderIdToCheck);\r\n  };\r\n\r\n  return (\r\n    <div className=\"i\">\r\n      {/* ... (existing JSX) */}\r\n      <div className=\"flex flex-col items-center\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Order ID\"\r\n          value={orderIdToCheck}\r\n          onChange={(e) => setOrderIdToCheck(e.target.value)}\r\n          className=\"border p-2 m-2\"\r\n        />\r\n        <button className=\"bg-yellow-500 text-white font-bold py-2 px-4\" onClick={handleCheckOrderStatus}>\r\n          Check Order Status\r\n        </button>\r\n        {orderStatus && (\r\n          <div className=\"bg-yellow-200 text-yellow-800 p-3 m-3\">\r\n            <strong>{orderStatus}</strong>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* ... (existing JSX) */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default orderstatus;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AAAA;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB;;EAEA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMQ,gBAAgB,GAAIC,OAAO,IAAK;IACpC;IACA,MAAMC,aAAa,GAAG;MACpB,QAAQ,EAAE,YAAY;MACtB,QAAQ,EAAE,SAAS;MACnB,QAAQ,EAAE;MACV;IACF,CAAC;;IAED,MAAMC,MAAM,GAAGD,aAAa,CAACD,OAAO,CAAC;IAErC,IAAIE,MAAM,EAAE;MACVJ,cAAc,CAAE,YAAWE,OAAQ,YAAWE,MAAO,EAAC,CAAC;IACzD,CAAC,MAAM;MACLJ,cAAc,CAAE,YAAWE,OAAQ,oCAAmC,CAAC;IACzE;EACF,CAAC;;EAED;EACA,MAAMG,sBAAsB,GAAG,MAAM;IACnC,IAAIR,cAAc,CAACS,IAAI,EAAE,KAAK,EAAE,EAAE;MAChC;MACAC,KAAK,CAACC,KAAK,CAAC,6BAA6B,CAAC;MAC1C;IACF;;IAEA;IACAP,gBAAgB,CAACJ,cAAc,CAAC;EAClC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,GAAG;IAAA,uBAEhB;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACzC;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,gBAAgB;QAC5B,KAAK,EAAEA,cAAe;QACtB,QAAQ,EAAGY,CAAC,IAAKX,iBAAiB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACnD,SAAS,EAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAC1B,eACF;QAAQ,SAAS,EAAC,8CAA8C;QAAC,OAAO,EAAEN,sBAAuB;QAAA,UAAC;MAElG;QAAA;QAAA;QAAA;MAAA,QAAS,EACRN,WAAW,iBACV;QAAK,SAAS,EAAC,uCAAuC;QAAA,uBACpD;UAAA,UAASA;QAAW;UAAA;UAAA;UAAA;QAAA;MAAU;QAAA;QAAA;QAAA;MAAA,QAEjC;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV,CAAC;AAAC,GA5DIH,WAAW;AA8DjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}