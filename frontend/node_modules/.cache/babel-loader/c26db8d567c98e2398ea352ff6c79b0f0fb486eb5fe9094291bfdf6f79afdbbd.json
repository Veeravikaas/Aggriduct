{"ast":null,"code":"const express = require('express');\nconst bodyParser = require('body-parser');\nconst nodemailer = require('nodemailer');\nconst app = express();\napp.use(bodyParser.json());\napp.post('/send-email', (req, res) => {\n  const {\n    name,\n    email,\n    message\n  } = req.body; // Assuming these fields are present in req.body\n\n  const transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'veeravikasv.23mca@kongu.edu',\n      // Replace with your email address\n      pass: '26-Jul-03' // Replace with your email password (consider using environment variables)\n    }\n  });\n\n  const mailOptions = {\n    from: email,\n    to: 'veeravikasv.23mca@kongu.edu',\n    subject: 'Form Submission',\n    text: `\n      Name: ${name}\n      Email: ${email}\n      Message: ${message}\n    `\n  };\n  transporter.sendMail(mailOptions, (error, info) => {\n    if (error) {\n      console.error('Error occurred:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Failed to send email.'\n      });\n    } else {\n      console.log('Email sent:', info.response);\n      res.status(200).json({\n        success: true,\n        message: 'Email sent successfully!'\n      });\n    }\n  });\n});\napp.listen(3000, () => {\n  console.log('Server is running on port 3000');\n});","map":{"version":3,"names":["express","require","bodyParser","nodemailer","app","use","json","post","req","res","name","email","message","body","transporter","createTransport","service","auth","user","pass","mailOptions","from","to","subject","text","sendMail","error","info","console","status","success","log","response","listen"],"sources":["D:/AGRIDUCT/frontend/src/page/sendMail.js"],"sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst nodemailer = require('nodemailer');\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.post('/send-email', (req, res) => {\r\n  const { name, email, message } = req.body; // Assuming these fields are present in req.body\r\n\r\n  const transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n      user: 'veeravikasv.23mca@kongu.edu', // Replace with your email address\r\n      pass: '26-Jul-03', // Replace with your email password (consider using environment variables)\r\n    },\r\n  });\r\n\r\n  const mailOptions = {\r\n    from: email,\r\n    to: 'veeravikasv.23mca@kongu.edu',\r\n    subject: 'Form Submission',\r\n    text: `\r\n      Name: ${name}\r\n      Email: ${email}\r\n      Message: ${message}\r\n    `,\r\n  };\r\n\r\n  transporter.sendMail(mailOptions, (error, info) => {\r\n    if (error) {\r\n      console.error('Error occurred:', error);\r\n      res.status(500).json({ success: false, message: 'Failed to send email.' });\r\n    } else {\r\n      console.log('Email sent:', info.response);\r\n      res.status(200).json({ success: true, message: 'Email sent successfully!' });\r\n    }\r\n  });\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log('Server is running on port 3000');\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAY,CAAC;AAExC,MAAMG,GAAG,GAAGJ,OAAO,EAAE;AAErBI,GAAG,CAACC,GAAG,CAACH,UAAU,CAACI,IAAI,EAAE,CAAC;AAE1BF,GAAG,CAACG,IAAI,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGJ,GAAG,CAACK,IAAI,CAAC,CAAC;;EAE3C,MAAMC,WAAW,GAAGX,UAAU,CAACY,eAAe,CAAC;IAC7CC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACJC,IAAI,EAAE,6BAA6B;MAAE;MACrCC,IAAI,EAAE,WAAW,CAAE;IACrB;EACF,CAAC,CAAC;;EAEF,MAAMC,WAAW,GAAG;IAClBC,IAAI,EAAEV,KAAK;IACXW,EAAE,EAAE,6BAA6B;IACjCC,OAAO,EAAE,iBAAiB;IAC1BC,IAAI,EAAG;AACX,cAAcd,IAAK;AACnB,eAAeC,KAAM;AACrB,iBAAiBC,OAAQ;AACzB;EACE,CAAC;EAEDE,WAAW,CAACW,QAAQ,CAACL,WAAW,EAAE,CAACM,KAAK,EAAEC,IAAI,KAAK;IACjD,IAAID,KAAK,EAAE;MACTE,OAAO,CAACF,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCjB,GAAG,CAACoB,MAAM,CAAC,GAAG,CAAC,CAACvB,IAAI,CAAC;QAAEwB,OAAO,EAAE,KAAK;QAAElB,OAAO,EAAE;MAAwB,CAAC,CAAC;IAC5E,CAAC,MAAM;MACLgB,OAAO,CAACG,GAAG,CAAC,aAAa,EAAEJ,IAAI,CAACK,QAAQ,CAAC;MACzCvB,GAAG,CAACoB,MAAM,CAAC,GAAG,CAAC,CAACvB,IAAI,CAAC;QAAEwB,OAAO,EAAE,IAAI;QAAElB,OAAO,EAAE;MAA2B,CAAC,CAAC;IAC9E;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFR,GAAG,CAAC6B,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBL,OAAO,CAACG,GAAG,CAAC,gCAAgC,CAAC;AAC/C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}