{"ast":null,"code":"const express = require('express');\nconst bodyParser = require('body-parser');\nconst nodemailer = require('nodemailer');\nconst app = express();\napp.use(bodyParser.json());\napp.post('/send-email', (req, res) => {\n  const {\n    subject,\n    recipitent\n  } = req.body;\n  const transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'veeravikasv.23mca@kongu.edu',\n      // Replace with your email address\n      pass: '26-Jul-03' // Replace with your email password (consider using environment variables)\n    }\n  });\n\n  const sendEmail = async formData => {\n    // Destructure form data (assuming formData is an object)\n    const {\n      name,\n      email,\n      message\n    } = formData;\n    try {\n      let info = await transporter.sendMail({\n        from: email,\n        // Sender email address\n        to: 'veeravikasv.23mca@kongu.edu',\n        // Receiver email address\n        subject: 'Form Submission',\n        text: `\n              Name: ${name}\n              Email: ${email}\n              Message: ${message}\n            `\n      });\n      console.log('Email sent:', info.response);\n      return {\n        success: true,\n        message: 'Email sent successfully!'\n      };\n    } catch (error) {\n      console.error('Error occurred:', error);\n      return {\n        success: false,\n        message: 'Failed to send email.'\n      };\n    }\n  };\n});\nmodule.exports = sendEmail;","map":{"version":3,"names":["express","require","bodyParser","nodemailer","app","use","json","post","req","res","subject","recipitent","body","transporter","createTransport","service","auth","user","pass","sendEmail","formData","name","email","message","info","sendMail","from","to","text","console","log","response","success","error","module","exports"],"sources":["D:/AGRIDUCT/frontend/src/page/sendMail.js"],"sourcesContent":["const express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst nodemailer = require('nodemailer');\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.post ('/send-email',(req,res) => {\r\n    const  { subject, recipitent } = req.body;\r\n\r\n    const transporter = nodemailer.createTransport({\r\n        service: 'gmail',\r\n        auth: {\r\n          user: 'veeravikasv.23mca@kongu.edu', // Replace with your email address\r\n          pass: '26-Jul-03', // Replace with your email password (consider using environment variables)\r\n        },\r\n      });\r\n\r\n      const sendEmail = async (formData) => {\r\n        // Destructure form data (assuming formData is an object)\r\n        const { name, email, message } = formData;\r\n      \r\n        try {\r\n          let info = await transporter.sendMail({\r\n            from: email, // Sender email address\r\n            to: 'veeravikasv.23mca@kongu.edu', // Receiver email address\r\n            subject: 'Form Submission',\r\n            text: `\r\n              Name: ${name}\r\n              Email: ${email}\r\n              Message: ${message}\r\n            `,\r\n          });\r\n          console.log('Email sent:', info.response);\r\n    return { success: true, message: 'Email sent successfully!' };\r\n  } catch (error) {\r\n    console.error('Error occurred:', error);\r\n    return { success: false, message: 'Failed to send email.' };\r\n  }\r\n\r\n\r\n}}\r\n);\r\n\r\nmodule.exports = sendEmail;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAY,CAAC;AAExC,MAAMG,GAAG,GAAGJ,OAAO,EAAE;AAErBI,GAAG,CAACC,GAAG,CAACH,UAAU,CAACI,IAAI,EAAE,CAAC;AAE1BF,GAAG,CAACG,IAAI,CAAE,aAAa,EAAC,CAACC,GAAG,EAACC,GAAG,KAAK;EACjC,MAAO;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGH,GAAG,CAACI,IAAI;EAEzC,MAAMC,WAAW,GAAGV,UAAU,CAACW,eAAe,CAAC;IAC3CC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACJC,IAAI,EAAE,6BAA6B;MAAE;MACrCC,IAAI,EAAE,WAAW,CAAE;IACrB;EACF,CAAC,CAAC;;EAEF,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpC;IACA,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGH,QAAQ;IAEzC,IAAI;MACF,IAAII,IAAI,GAAG,MAAMX,WAAW,CAACY,QAAQ,CAAC;QACpCC,IAAI,EAAEJ,KAAK;QAAE;QACbK,EAAE,EAAE,6BAA6B;QAAE;QACnCjB,OAAO,EAAE,iBAAiB;QAC1BkB,IAAI,EAAG;AACnB,sBAAsBP,IAAK;AAC3B,uBAAuBC,KAAM;AAC7B,yBAAyBC,OAAQ;AACjC;MACU,CAAC,CAAC;MACFM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,IAAI,CAACO,QAAQ,CAAC;MAC/C,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAET,OAAO,EAAE;MAA2B,CAAC;IAC/D,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,OAAO;QAAED,OAAO,EAAE,KAAK;QAAET,OAAO,EAAE;MAAwB,CAAC;IAC7D;EAGF,CAAC;AAAA,CAAC,CACD;AAEDW,MAAM,CAACC,OAAO,GAAGhB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}